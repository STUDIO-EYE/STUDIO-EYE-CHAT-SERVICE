plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//kafka
	implementation 'org.springframework.kafka:spring-kafka'

	//mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//ImmutableMap
	implementation 'com.google.guava:guava:31.0.1-jre'

	//eureka
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'


	//jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'

	// Jasypt: DB 암호화
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'

}

tasks.named('test') {
	useJUnitPlatform()
}
